// Script de debug para verificar o problema
// Execute no console do navegador

console.log('üîç Debugando problema de gerenciamento de usu√°rios...');

// 1. Verificar usu√°rio atual
const user = JSON.parse(localStorage.getItem('app_user') || '{}');
console.log('üë§ Usu√°rio atual:', user);
console.log('üîë √â admin?', user.role === 'admin');

// 2. Verificar se as fun√ß√µes existem
async function checkFunctions() {
  try {
    console.log('üîß Verificando fun√ß√µes SQL...');
    
    // Testar fun√ß√£o get_all_users
    const response = await fetch('https://jamzaegwhzmtvierjckg.supabase.co/rest/v1/rpc/get_all_users', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'apikey': 'sua_api_key_aqui', // Substitua pela sua API key
        'Authorization': 'Bearer sua_anon_key_aqui' // Substitua pela sua anon key
      }
    });
    
    console.log('üì° Status da resposta:', response.status);
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ Fun√ß√£o existe! Resposta:', data);
    } else {
      console.log('‚ùå Fun√ß√£o n√£o encontrada. Status:', response.status);
    }
  } catch (error) {
    console.error('‚ùå Erro ao verificar fun√ß√£o:', error);
  }
}

// 3. Verificar usu√°rios no banco
async function checkUsers() {
  try {
    console.log('üë• Verificando usu√°rios no banco...');
    
    const response = await fetch('https://jamzaegwhzmtvierjckg.supabase.co/rest/v1/profiles?select=*&is_active=eq.true', {
      headers: {
        'apikey': 'sua_api_key_aqui', // Substitua pela sua API key
        'Authorization': 'Bearer sua_anon_key_aqui' // Substitua pela sua anon key
      }
    });
    
    if (response.ok) {
      const users = await response.json();
      console.log('‚úÖ Usu√°rios encontrados:', users.length);
      console.log('üìã Lista de usu√°rios:', users);
    } else {
      console.log('‚ùå Erro ao buscar usu√°rios. Status:', response.status);
    }
  } catch (error) {
    console.error('‚ùå Erro ao verificar usu√°rios:', error);
  }
}

// 4. Executar verifica√ß√µes
async function runDebug() {
  console.log('üöÄ Iniciando debug...\n');
  
  await checkFunctions();
  console.log('');
  
  await checkUsers();
  console.log('');
  
  console.log('üìã Checklist de verifica√ß√£o:');
  console.log('‚ñ° Script SQL foi executado no Supabase');
  console.log('‚ñ° Fun√ß√µes aparecem na lista de Database > Functions');
  console.log('‚ñ° Usu√°rio logado √© admin');
  console.log('‚ñ° Existem usu√°rios na tabela profiles');
  console.log('‚ñ° API keys est√£o corretas');
}

// Executar debug
runDebug();

// Exportar para uso manual
window.debugUserManagement = {
  checkFunctions,
  checkUsers,
  runDebug
};
